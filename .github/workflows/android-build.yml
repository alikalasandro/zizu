name: Android Build (self-contained)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Create minimal Android project
        shell: pwsh
        run: |
          # klasÃ¶rleri oluÅŸtur
          New-Item -ItemType Directory -Force app\src\main\java\com\zizu\app | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\layout | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\values | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\xml | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\mipmap-anydpi-v26 | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\mipmap-mdpi | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\mipmap-hdpi | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\mipmap-xhdpi | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\mipmap-xxhdpi | Out-Null
          New-Item -ItemType Directory -Force app\src\main\res\mipmap-xxxhdpi | Out-Null

          @'
          pluginManagement {
            repositories { gradlePluginPortal(); google(); mavenCentral() }
          }
          dependencyResolutionManagement {
            repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
            repositories { google(); mavenCentral() }
          }
          rootProject.name = "Zizu"
          include(":app")
          '@ | Set-Content -Encoding UTF8 settings.gradle

          @'
          plugins {
            id "com.android.application" version "8.4.2"
            id "org.jetbrains.kotlin.android" version "1.9.24"
          }

          android {
            namespace "com.zizu.app"
            compileSdk 34

            defaultConfig {
              applicationId "com.zizu.app"
              minSdk 24
              targetSdk 34
              versionCode 1
              versionName "1.0"
            }

            buildTypes {
              release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
              }
            }

            compileOptions {
              sourceCompatibility JavaVersion.VERSION_17
              targetCompatibility JavaVersion.VERSION_17
            }
            kotlinOptions {
              jvmTarget = "17"
            }
          }

          dependencies {
            implementation "androidx.core:core-ktx:1.13.1"
            implementation "androidx.appcompat:appcompat:1.7.0"
            implementation "com.google.android.material:material:1.12.0"
            implementation "androidx.activity:activity-ktx:1.9.2"
            implementation "androidx.webkit:webkit:1.11.0"
          }
          '@ | Set-Content -Encoding UTF8 app\build.gradle

          @'
          org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8
          android.useAndroidX=true
          kotlin.code.style=official
          '@ | Set-Content -Encoding UTF8 gradle.properties

          @'
          <?xml version="1.0" encoding="utf-8"?>
          <manifest xmlns:android="http://schemas.android.com/apk/res/android">

            <uses-permission android:name="android.permission.INTERNET"/>
            <uses-permission android:name="android.permission.RECORD_AUDIO"/>

            <application
              android:label="Zizu"
              android:icon="@mipmap/ic_launcher"
              android:usesCleartextTraffic="true">

              <activity
                android:name=".MainActivity"
                android:exported="true">

                <intent-filter>
                  <action android:name="android.intent.action.MAIN"/>
                  <category android:name="android.intent.category.LAUNCHER"/>
                </intent-filter>

              </activity>
            </application>
          </manifest>
          '@ | Set-Content -Encoding UTF8 app\src\main\AndroidManifest.xml

          @'
          package com.zizu.app

import android.annotation.SuppressLint
import android.os.Bundle
import android.webkit.WebChromeClient
import android.webkit.WebSettings
import android.webkit.WebView
import androidx.activity.ComponentActivity

class MainActivity : ComponentActivity() {
    @SuppressLint("SetJavaScriptEnabled")
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        val web = WebView(this)
        setContentView(web)

        val ws: WebSettings = web.settings
        ws.javaScriptEnabled = true
        ws.mediaPlaybackRequiresUserGesture = false
        ws.domStorageEnabled = true

        web.webChromeClient = WebChromeClient()

        // ðŸ‘‡ ArtÄ±k kendi GitHub sayfan aÃ§Ä±lacak
        web.loadUrl("https://alikalasandro.github.io/zizi/")
    }
}

          '@ | Set-Content -Encoding UTF8 app\src\main\java\com\zizu\app\MainActivity.kt

          @'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
            <string name="app_name">Zizu</string>
          </resources>
          '@ | Set-Content -Encoding UTF8 app\src\main\res\values\strings.xml

          @'
          <?xml version="1.0" encoding="utf-8"?>
          <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="match_parent"
              android:layout_height="match_parent" />
          '@ | Set-Content -Encoding UTF8 app\src\main\res\layout\activity_main.xml

          @'
          # keep rules
          '@ | Set-Content -Encoding UTF8 app\proguard-rules.pro

          @'
          <?xml version="1.0" encoding="utf-8"?>
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
              <background android:drawable="@android:color/black"/>
              <foreground android:drawable="@android:color/white"/>
          </adaptive-icon>
          '@ | Set-Content -Encoding UTF8 app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml

          @'
          <?xml version="1.0" encoding="utf-8"?>
          <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
              <background android:drawable="@android:color/black"/>
              <foreground android:drawable="@android:color/white"/>
          </adaptive-icon>
          '@ | Set-Content -Encoding UTF8 app\src\main\res\mipmap-anydpi-v26\ic_launcher_round.xml

          # sahte ikon PNG'lerini oluÅŸtur
          $pngBase64 = "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR4nGNgYAAAAAMAASsJTYQAAAAASUVORK5CYII="
          [IO.File]::WriteAllBytes("app\src\main\res\mipmap-mdpi\ic_launcher.png",    [Convert]::FromBase64String($pngBase64))
          [IO.File]::WriteAllBytes("app\src\main\res\mipmap-hdpi\ic_launcher.png",    [Convert]::FromBase64String($pngBase64))
          [IO.File]::WriteAllBytes("app\src\main\res\mipmap-xhdpi\ic_launcher.png",   [Convert]::FromBase64String($pngBase64))
          [IO.File]::WriteAllBytes("app\src\main\res\mipmap-xxhdpi\ic_launcher.png",  [Convert]::FromBase64String($pngBase64))
          [IO.File]::WriteAllBytes("app\src\main\res\mipmap-xxxhdpi\ic_launcher.png", [Convert]::FromBase64String($pngBase64))

      - name: Install Gradle wrapper
        shell: pwsh
        run: gradle wrapper --gradle-version 8.6

      - name: Build Debug APK
        shell: pwsh
        run: .\gradlew.bat assembleDebug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: zizu-debug-apk
          path: app\build\outputs\apk\debug\*.apk
